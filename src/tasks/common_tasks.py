import src.tasks.task01 as task01
import src.tasks.task02 as task02
import src.tasks.task04 as task04
import src.tasks.task05 as task05
import src.tasks.task06 as task06
import src.tasks.task07 as task07


def get_task_by_number(n: int):
    match n:
        case 1:
            return task01
        case 2:
            return task02
        case 4:
            return task04
        case 5:
            return task05
        case 6:
            return task06
        case 7:
            return task07
        case _:
            return None


def get_unsolved_tasks():
    return {
        3: "[Необязательная]" + " Решение СЛАУ методом QR-разложения.",
        8: "[Графическая]" + " Проекционные методы для краевой задачи ОДУ второго порядка (метод Ритца, метод Галеркина).",
        9: "[Необязательная]" + "[Графическая]" + " Метод конечных элементов (для ОДУ).",
        10: "[Трёхмерная]" + " Решение задачи теплопроводности сеточными методами (явная и неявная схемы).",
        11: "[Трёхмерная]" + " Решение эллиптической задачи сеточным методом.",
        12: "[Необязательная]" + "[Графическая]" + " Задача кластеризации (k-means).",
        13: "[Необязательная]" + " Метод Монте-Карло (приближенное вычисление собственного интеграла).",
        14: "[Необязательная]" + " Численная оптимизация (градиентный спуск, метод Нестерова).",
    }


def get_solved_tasks():
    return {
        1: "Влияние ошибок округления на решение СЛАУ. Числа обусловленности.",
        2: "Точные методы решения СЛАУ (LU-разложение, метод Холецкого). Регуляризация.",
        4: "Итерационные методы решения СЛАУ (метод простой итерации, метод Зейделя, метод релаксации).",
        5: "Частичная проблема собственных значений — поиск максимального по модулю собственного числа степенным методом и методом скалярных произведений.",
        6: "Полная проблема собственных значений (метод Якоби).",
        7: "[Графическая]" + " Решение краевой задачи для ОДУ второго порядка сеточным методом (измельчение сетки; уточнение по Ричардсону).",
    }
